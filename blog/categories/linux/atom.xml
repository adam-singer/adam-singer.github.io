<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Random posts about coding]]></title>
  <link href="http://financeCoding.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://financeCoding.github.com/"/>
  <updated>2013-11-30T15:53:28-08:00</updated>
  <id>http://financeCoding.github.com/</id>
  <author>
    <name><![CDATA[Adam Singer]]></name>
    <email><![CDATA[financeCoding@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dartium Build rev 116980 in 4 easy steps]]></title>
    <link href="http://financeCoding.github.com/blog/2012/01/11/dartium-build-rev-116980-in-4-easy-steps/"/>
    <updated>2012-01-11T00:00:00-08:00</updated>
    <id>http://financeCoding.github.com/blog/2012/01/11/dartium-build-rev-116980-in-4-easy-steps</id>
    <content type="html"><![CDATA[<p style="margin-left:22pt;">At the moment <a href="http://code.google.com/p/dart/wiki/BuildingDartium">Dartium builds</a> are not available on Googles <a href="http://gsdview.appspot.com/dart-editor-archive-continuous/latest/">continuous integration server</a>. So I decided to distribute a release build for <a href="http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz">Linux 32bit</a> . Based on the wiki directions its simple enough for anyone to generate, I felt the need to distribute a build for those who don't have the time to invest in downloading/configuring/building. An important tip testing dart code in Dartium is to include the additional script call that executes the entry into main(). This is done by adding an additional &lt;script&gt;{}&lt;/script&gt; following the line where the dart code is loaded.</p>


<p style="margin-left:22pt;">The build of Dartium provide is from Rev: 116980</p>


<p style="margin-left:22pt;"><img src="http://financecoding.files.wordpress.com/2012/01/011212_0219_dartiumbuil1.png" alt="" /></p>




<ul>
    <li>
<h3>Get the latest version of DartEditor and Dartium</h3>
</li>
</ul>


<pre>wget <a href="http://gsdview.appspot.com/dart-editor-archive-continuous/latest/DartBuild-linux.gtk.x86.zip">http://gsdview.appspot.com/dart-editor-archive-continuous/latest/DartBuild-linux.gtk.x86.zip</a>
wget <a href="http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz">http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz</a>
wget <a href="http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz.md5">http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz.md5</a>
wget <a href="http://dl.dropbox.com/u/33138127/dartium/README.txt">http://dl.dropbox.com/u/33138127/dartium/README.txt</a>
md5sum -c dartium-linux-32bit-Release.tar.gz.md5</pre>


<ul>
    <li>Register Dartium on Ubuntu as a registered application so DartEditor can pick it up. Modify dartium-browser.desktop to the chrome-wrapper where Dartium was unzipped.<img class="alignnone" src="http://financecoding.files.wordpress.com/2012/01/011212_0219_dartiumbuil2.png" alt="" width="444" height="172" /></li>
</ul>


<pre>wget <a href="http://dl.dropbox.com/u/33138127/dartium/dartium-browser.desktop">http://dl.dropbox.com/u/33138127/dartium/dartium-browser.desktop</a>
vim dartium-browser.desktop
wget <a href="http://dl.dropbox.com/u/33138127/dartium/dartium-browser.desktop.ubuntu.install.sh">http://dl.dropbox.com/u/33138127/dartium/dartium-browser.desktop.ubuntu.install.sh</a>
sudo ./dartium-browser.desktop.ubuntu.install.sh</pre>


<ul>
    <li>
<h3>Register Dartium as the browser to launch in DartEditor</h3>
</li>
</ul>


<p><img src="http://financecoding.files.wordpress.com/2012/01/011212_0219_dartiumbuil3.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<ul>
    <li>
<h3>Create a famous HelloWorld.</h3>
</li>
</ul>


<p><img src="http://financecoding.files.wordpress.com/2012/01/011212_0219_dartiumbuil4.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><em>Adjust the html to properly execute dart.</em></p>

<p><img src="http://financecoding.files.wordpress.com/2012/01/011212_0219_dartiumbuil5.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><img src="http://financecoding.files.wordpress.com/2012/01/011212_0219_dartiumbuil6.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p style="text-align:justify;">Watch <a href="http://en.wikipedia.org/wiki/Poison_dart_frog">dart</a> in its <a href="http://en.wiktionary.org/wiki/-ium">metal</a> state.</p>


<p>Links:</p>

<pre><a href="http://dl.dropbox.com/u/33138127/dartium/dartium-browser.desktop">http://dl.dropbox.com/u/33138127/dartium/dartium-browser.desktop</a>
<a href="http://dl.dropbox.com/u/33138127/dartium/dartium-browser.desktop.ubuntu.install.sh">http://dl.dropbox.com/u/33138127/dartium/dartium-browser.desktop.ubuntu.install.sh</a>
<a href="http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz">http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz</a>
<a href="http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz.md5">http://dl.dropbox.com/u/33138127/dartium/dartium-linux-32bit-Release.tar.gz.md5</a>
<a href="http://dl.dropbox.com/u/33138127/dartium/README.txt">http://dl.dropbox.com/u/33138127/dartium/README.txt</a></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing RabbitMQ on a local vcap]]></title>
    <link href="http://financeCoding.github.com/blog/2011/08/13/installing-rabbitmq-on-a-local-vcap-2/"/>
    <updated>2011-08-13T00:00:00-07:00</updated>
    <id>http://financeCoding.github.com/blog/2011/08/13/installing-rabbitmq-on-a-local-vcap-2</id>
    <content type="html"><![CDATA[<p>Assuming you have already done the <a href="https://github.com/cloudfoundry/vcap">https://github.com/cloudfoundry/vcap</a> song and dance. I always have a terriable time trying to get items to work on <a href="http://www.cloudfoundry.com/" title="cloudfoundry.com">cloudfoundry.com</a> so decided to see how much of RabbitMQ is available in <a href="https://github.com/cloudfoundry/vcap" title="vcap">vcap</a>. Here is a hack to getting RabbitMQ running. I could totally have a baked install and thus the reason why I went down this dark path.</p>

<p>Update and install the following decencies
<em>cd ~/cloudfoundry/vcap
git pull
gem install bundler --no-rdock --no-ri
rake bundler:install
gem install amqp --version '0.7.1'
gem install daemons --version '1.1.0'
gem install thin --version '1.2.8'
cd ~
gem update vmc</em></p>

<p>Edit <em>~/cloudfoundry/vcap/bin/vcap</em> and add rabbit as a service
<img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr1.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>Fire up the services by <em>cd ~/cloudfoundry/vcap &amp;&amp; bin/vcap start</em>
<img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr2.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>Set target and login
<em>vmc target api.vcap.me
vmc login --email blahblah@blahblah.com --passwd blahblahblah</em></p>

<p>BTW, if you forgot your username or password it can be found in ~/cloudfoundry/vcap/cloud_controller/db/cloudcontroller.sqlite3 . Just rip this file apart or add a new hash for the password.
Check to see the runtimes are correctly available
<img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr3.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
<img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr4.png" alt="" /></p>

<p>Check out the following sample to package up
<em>git clone <a href="https://github.com/rabbitmq/rabbitmq-cloudfoundry-samples.git">https://github.com/rabbitmq/rabbitmq-cloudfoundry-samples.git</a>
cd ~/rabbitmq-cloudfoundry-samples/spring &amp;&amp; mvn package &amp;&amp; cd target &amp;&amp; vmc push</em></p>

<p>You can follow <a href="http://support.cloudfoundry.com/entries/20322602-getting-started-with-the-rabbitmq-service-from-a-spring-application">http://support.cloudfoundry.com/entries/20322602-getting-started-with-the-rabbitmq-service-from-a-spring-application</a> to deploy the app correctly.</p>

<p>Before you actually create the service you want to check the logs out… This is the issue I had with a local vcap and rabbit. The user and vhost never get added to rabbitmq, doing this manually will make the service work. Make sure to tail the logs before running the vmc create-service. That way you can pull out the actual username/password/vhost that vcap will try to send to rabbitmqctl.</p>

<p><em>tail -f ~/cloudfoundry/vcap/cloud_controller/log/development.log
vmc create-service rabbitmq
vmc bind-service rabbitmq-XXXXX rabbit-simple</em>
<img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr5.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>After creating the service the logs will display the username/password/vhost but when you bind the service to an application the username and password change and you need to add those by hand with rabbitmqctl
<img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr6.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>The first set of username/password will not be used, after binding you need the current ones. In this case they were
<strong>user: uz25LQnFmJTrC
pass: pfah5U5dFiSRo
vhost: vf883c025ec524e55b11b0db4dcce928e</strong></p>

<p>At this point you can add the data by hand, restart rabbitmq (sometimes queues decided to get eaten) and you should be ready to go.
<em>sudo rabbitmqctl add_user uz25LQnFmJTrC pfah5U5dFiSRo
sudo rabbitmqctl add_vhost vf883c025ec524e55b11b0db4dcce928e
sudo rabbitmqctl set_permissions -p vf883c025ec524e55b11b0db4dcce928e uz25LQnFmJTrC ".<em>" ".</em>" ".*"
sudo /etc/init.d/rabbitmq-server restart</em></p>

<p><img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr7.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr8.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><img src="http://financecoding.files.wordpress.com/2011/08/081311_2230_installingr9.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>Some useful logs to keep tailed
<em>~/cloudfoundry/vcap/cloud_controller/log/development.log
/var/log/rabbitmq/*</em></p>

<p>Did I need to go to all this trouble, probably not, but it was fun to investigate what vcap is made and how things are done internally. Since all the code looks like its in place, my guess on how to properly enable rabbit service is to find out what should triggers the calls to ~/cloudfoundry/vcap/services/rabbit/lib/rabbit_service/rabbit_node.rb and debug why the calls are actually failing to contact the local rabbitmq service.</p>

<p>Useful links
<a href="http://support.cloudfoundry.com/entries/20346977-rabbitmq-cloud-foundry-cloud-messaging-that-just-works">http://support.cloudfoundry.com/entries/20346977-rabbitmq-cloud-foundry-cloud-messaging-that-just-works</a>
<a href="https://github.com/rabbitmq/rabbitmq-cloudfoundry-samples">https://github.com/rabbitmq/rabbitmq-cloudfoundry-samples</a>
<a href="http://support.cloudfoundry.com/entries/20322602-getting-started-with-the-rabbitmq-service-from-a-spring-application">http://support.cloudfoundry.com/entries/20322602-getting-started-with-the-rabbitmq-service-from-a-spring-application</a>
<a href="https://github.com/cloudfoundry/vcap">https://github.com/cloudfoundry/vcap</a>
<a href="http://support.cloudfoundry.com/entries/20012337-getting-started-guide-command-line-vmc-users">http://support.cloudfoundry.com/entries/20012337-getting-started-guide-command-line-vmc-users</a>
<a href="https://raw.github.com/cloudfoundry/vcap/master/setup/install">https://raw.github.com/cloudfoundry/vcap/master/setup/install</a>
<a href="http://support.cloudfoundry.com/entries/20052116-rabbit-on-local-instance-of-vcap">http://support.cloudfoundry.com/entries/20052116-rabbit-on-local-instance-of-vcap</a>
<a href="http://www.rabbitmq.com/admin-guide.html">http://www.rabbitmq.com/admin-guide.html</a>
<a href="http://www.rabbitmq.com/man/rabbitmqctl.1.man.html">http://www.rabbitmq.com/man/rabbitmqctl.1.man.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating new java project with Cloudfoundry and Spring Source Tool]]></title>
    <link href="http://financeCoding.github.com/blog/2011/05/20/creating-new-java-project-with-cloudfoundry-and-spring-source-tool/"/>
    <updated>2011-05-20T00:00:00-07:00</updated>
    <id>http://financeCoding.github.com/blog/2011/05/20/creating-new-java-project-with-cloudfoundry-and-spring-source-tool</id>
    <content type="html"><![CDATA[<p>After picking up <a href="http://www.springsource.com/developer/sts">SpringSource Tool Suite</a> and Installing the <a href="http://blog.springsource.com/2011/04/13/using-cloud-foundry-from-sts/">Cloudfoundry plugins</a> creating a new java project is painless, as long as you know which options to choose. From the New wizard you need to choose "Dynamic Web Project"</p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew1.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
Target runtime at the time of this post was "Cloud Foundry (Runtime) v1.0" and Dynamic web module version "2.5" with a Configuration of "Default Configuration for Cloud Foundry (Runtime) v1.0"</p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew2.png" alt="" /></p>

<p>The Project layout</p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew3.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
Creating a new Package and class</p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew4.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew5.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
<img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew6.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
Create a classic <a href="http://en.wikipedia.org/wiki/Hello_world_program">HelloWorld</a></p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew7.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
Time to extend the <a href="http://download.oracle.com/javaee/5/api/javax/servlet/http/HttpServlet.html">HttpServlet</a> and override <a href="http://download.oracle.com/javaee/5/api/javax/servlet/http/HttpServlet.html">doGet</a></p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew8.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
Add entries of the <a href="http://www.caucho.com/resin-3.0/config/webapp.xtp">servlet</a> and <a href="http://www.caucho.com/resin-3.0/config/webapp.xtp">servlet-mapping</a></p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew9.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
Add Application</p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew10.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
Start the service</p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew11.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
And you have the basic hello world from the cloud foundry samples.</p>

<p><img src="http://financecoding.files.wordpress.com/2011/05/052111_0541_creatingnew12.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building and Editing Linux Kernel in Eclipse for Android Rowboat]]></title>
    <link href="http://financeCoding.github.com/blog/2011/03/17/building-and-editing-linux-kernel-in-eclipse-for-android-rowboat/"/>
    <updated>2011-03-17T00:00:00-07:00</updated>
    <id>http://financeCoding.github.com/blog/2011/03/17/building-and-editing-linux-kernel-in-eclipse-for-android-rowboat</id>
    <content type="html"><![CDATA[<p>First off some references I used to complete this task. This was possibly the best so far
<a href="http://issaris.blogspot.com/2007/12/download-linux-kernel-sourcecode-from.html">http://issaris.blogspot.com/2007/12/download-linux-kernel-sourcecode-from.html</a>
Some other references also helped <a title="Eclipse Wiki" href="http://wiki.eclipse.org/HowTo_use_the_CDT_to_navigate_Linux_kernel_source" target="_blank">Ref1</a>, <a title="linuxtopia" href="http://www.linuxtopia.org/online_books/eclipse_documentation/eclipse_c_c++_guide/topic/org.eclipse.cdt.doc.user/getting_started/eclipse_c_c++_guide_cdt_w_existing_code.htm" target="_blank">Ref2</a>, <a title="devkit8000" href="http://devkit8000.wikispaces.com/CPP+development+with+Eclipse" target="_blank">Ref3</a>, <a title="bigresource" href="http://android.bigresource.com/Android-run-android-source-code-in-linux-eclipse-bQKNaH320.html" target="_blank">Ref4
</a>I had following file system layout when dealing with <a href="http://processors.wiki.ti.com/index.php/TI-Android-FroYo-DevKit-V2.2_UserGuide">TI_DevKit V2.2</a></p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/031711_0640_buildingand1.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>After you have everything imported per directions the next big step is getting the .config setup. Follow the directions on the <a href="http://code.google.com/p/rowboat/wiki/ConfigureAndBuild">android rowboat</a> site for doing a first build of the linux kernel in commandline before trying to build from eclipse. This helps generate the .config file. Some additional settings needed was PATH and Build Command</p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/031711_0640_buildingand2.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><em>/home/adam/BeagleBoard/rowboat-prebuilt/linux-x86/toolchain/arm-eabi-4.4.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games</em></p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/031711_0640_buildingand3.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/031711_0640_buildingand4.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BeagleTouch on TI_Android_Froyo_DevKit-V2.2]]></title>
    <link href="http://financeCoding.github.com/blog/2011/03/06/beagletouch-on-ti_android_froyo_devkit-v2-2/"/>
    <updated>2011-03-06T00:00:00-08:00</updated>
    <id>http://financeCoding.github.com/blog/2011/03/06/beagletouch-on-ti_android_froyo_devkit-v2-2</id>
    <content type="html"><![CDATA[<p>Liquidware's <a href="http://www.liquidware.com/shop/show/BB-BT/BeagleTouch">BeagleTouch</a> provides a nice display device for <a href="http://beagleboard.org/">BeagleBoard</a> developer. They provide non android <a href="https://github.com/liquidware/liquidware_beagleboard_linux/tree/liquidware">linux</a> kernel source code to jump in right away to use it. <a href="http://antipastohw.pbworks.com/w/page/27129517/BeagleTouch">BeagleTouch blog</a> post by will on <a href="http://antipastohw.pbworks.com/w/page/26554120/FrontPage">antipastohw</a>. Here is some crude patches to get started with it on <a href="http://code.google.com/p/rowboat/">rowboat</a> / <a href="http://processors.wiki.ti.com/index.php/TI-Android-FroYo-DevKit-V2.2_UserGuide">TI DevKit</a>. I have my patches located on google docs:</p>

<p><a href="https://docs.google.com/leaf?id=0B29MR2FlgtejMjFjOWVhOGYtOThiNC00NGJkLTk5NTktMDE3ZTBiZjhhYTY0&amp;hl=en"><span style="font-family:Arial;font-size:10pt;">BeagleTouch.TI_Android_Froyo_DevKit-V2.2.config</span></a><span style="color:black;font-family:Arial;font-size:10pt;">
</span></p>

<p><a href="https://docs.google.com/leaf?id=0B29MR2FlgtejODdjZDBhNzQtZmYyNC00MWVmLWI4YzYtN2Y2ODNhZjlhZmRk&amp;hl=en"><span style="font-family:Arial;font-size:10pt;">BeagleTouch.TI_Android_Froyo_DevKit-V2.2.patch</span></a><span style="color:black;font-family:Arial;font-size:10pt;">
</span></p>

<p>Apply the patch accordingly and copy over the config into the kernel source tree.</p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/030611_2121_beagletouch12.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>One issue that was noticeable from a direct patch of code was the y-axis being inverted. I corrected it with a hard coded reference value for now.</p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/030611_2121_beagletouch22.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/030611_2121_beagletouch32.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>This patch doesn't help when offset loss happens in the touch screen. Looking info using <a href="https://github.com/kergoth/tslib">tslib</a> to capture better data settings and a linear formula for pointer <a href="http://wcyan.spaces.live.com/blog/cns!69F0ECE1192E739!381.entry">calculations</a>.  Some good instructions for compiling tslib on android can be found on <a href="http://www.eefocus.com/wenes1/blog/10-05/190293_09ed8.html">wenes1's blog</a>. A different direction to fix this issue would be to use <a href="http://androidzaurus.seesaa.net/article/90045743.html">Y_AXIS_MAX constant</a>.</p>

<p>[youtube=http://www.youtube.com/watch?v=8594I2NDPsM]</p>

<p>It was hard for me to find any direct documentation on how touch screen drivers should be designed and configured in Android. If you know of any please ping <a href="mailto:financecoding@gmail.com">me</a>.</p>
]]></content>
  </entry>
  
</feed>
