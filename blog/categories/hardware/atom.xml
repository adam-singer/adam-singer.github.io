<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Hardware | Random posts about coding]]></title>
  <link href="http://financeCoding.github.com/blog/categories/hardware/atom.xml" rel="self"/>
  <link href="http://financeCoding.github.com/"/>
  <updated>2014-03-28T14:46:55-07:00</updated>
  <id>http://financeCoding.github.com/</id>
  <author>
    <name><![CDATA[Adam Singer]]></name>
    <email><![CDATA[financeCoding@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Last Dart mashup for 2012 - Clock Chrome App Drives ADK2012]]></title>
    <link href="http://financeCoding.github.com/blog/2012/12/31/last-dart-mashup-for-2012-clock-chrome-app-drives-adk2012/"/>
    <updated>2012-12-31T13:03:00-08:00</updated>
    <id>http://financeCoding.github.com/blog/2012/12/31/last-dart-mashup-for-2012-clock-chrome-app-drives-adk2012</id>
    <content type="html"><![CDATA[<p>My last dart mashup for the year, excited to see what the community and dart team brings for 2013.</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/-Z-cxc3OXpE" frameborder="0" allowfullscreen></iframe>


<p>All source code can be found in the example directory of <a href="https://github.com/dart-gde/chrome.dart">chrome.dart</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Netduino Plus with RelayShield as networked light switches]]></title>
    <link href="http://financeCoding.github.com/blog/2011/07/31/netduino-plus-with-relayshield-as-networked-light-switches/"/>
    <updated>2011-07-31T00:00:00-07:00</updated>
    <id>http://financeCoding.github.com/blog/2011/07/31/netduino-plus-with-relayshield-as-networked-light-switches</id>
    <content type="html"><![CDATA[<p>Picked up a fun <a href="http://garden.seeedstudio.com/index.php?title=Relay_Shield">relay shield</a> from the <a href="http://www.seeedstudio.com/depot/">seeedstudio</a> people. My goal was to be able to control lights over the network. After grabbing some webserver code from this <a href="http://forums.netduino.com/index.php?/topic/1345-pachube-client-for-netduinoplus/">post</a>, I was able to get a simple <a href="https://bitbucket.org/financecoding/relaywebserver/overview">basic web server and light controller</a> up in no time. One stumbling block I had was the MAC configuration with <a href="http://msdn.microsoft.com/en-us/library/cc544593.aspx">MFDeploy</a>. If you don't use the proper MAC that was assigned to the Ethernet controller you could have potential DHCP or router ARP table issues. When setting up the <a href="http://www.netduino.com/netduinoplus/specs.htm">netduino</a> network I was lazy and put in a bogus MAC, that caused a few hours of debugging. Once deployed and networking is configured hit the root address from the network and a simple page with links get displayed</p>

<p><img src="http://financecoding.files.wordpress.com/2011/07/080111_0110_netduinoplu1.png" alt="" /></p>

<p>Quick photo and diagram of the setup</p>

<p><img src="http://financecoding.files.wordpress.com/2011/07/080111_0110_netduinoplu2.jpg" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
<img src="http://financecoding.files.wordpress.com/2011/07/080111_0110_netduinoplu3.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span>
Pick up the <a href="https://bitbucket.org/financecoding/relaywebserver/overview">code</a> hack around and have fun. Suggestions and comments welcome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building and Editing Linux Kernel in Eclipse for Android Rowboat]]></title>
    <link href="http://financeCoding.github.com/blog/2011/03/17/building-and-editing-linux-kernel-in-eclipse-for-android-rowboat/"/>
    <updated>2011-03-17T00:00:00-07:00</updated>
    <id>http://financeCoding.github.com/blog/2011/03/17/building-and-editing-linux-kernel-in-eclipse-for-android-rowboat</id>
    <content type="html"><![CDATA[<p>First off some references I used to complete this task. This was possibly the best so far
<a href="http://issaris.blogspot.com/2007/12/download-linux-kernel-sourcecode-from.html">http://issaris.blogspot.com/2007/12/download-linux-kernel-sourcecode-from.html</a>
Some other references also helped <a title="Eclipse Wiki" href="http://wiki.eclipse.org/HowTo_use_the_CDT_to_navigate_Linux_kernel_source" target="_blank">Ref1</a>, <a title="linuxtopia" href="http://www.linuxtopia.org/online_books/eclipse_documentation/eclipse_c_c++_guide/topic/org.eclipse.cdt.doc.user/getting_started/eclipse_c_c++_guide_cdt_w_existing_code.htm" target="_blank">Ref2</a>, <a title="devkit8000" href="http://devkit8000.wikispaces.com/CPP+development+with+Eclipse" target="_blank">Ref3</a>, <a title="bigresource" href="http://android.bigresource.com/Android-run-android-source-code-in-linux-eclipse-bQKNaH320.html" target="_blank">Ref4
</a>I had following file system layout when dealing with <a href="http://processors.wiki.ti.com/index.php/TI-Android-FroYo-DevKit-V2.2_UserGuide">TI_DevKit V2.2</a></p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/031711_0640_buildingand1.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>After you have everything imported per directions the next big step is getting the .config setup. Follow the directions on the <a href="http://code.google.com/p/rowboat/wiki/ConfigureAndBuild">android rowboat</a> site for doing a first build of the linux kernel in commandline before trying to build from eclipse. This helps generate the .config file.Â Some additional settings needed was PATH and Build Command</p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/031711_0640_buildingand2.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><em>/home/adam/BeagleBoard/rowboat-prebuilt/linux-x86/toolchain/arm-eabi-4.4.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games</em></p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/031711_0640_buildingand3.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/031711_0640_buildingand4.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BeagleTouch on TI_Android_Froyo_DevKit-V2.2]]></title>
    <link href="http://financeCoding.github.com/blog/2011/03/06/beagletouch-on-ti_android_froyo_devkit-v2-2/"/>
    <updated>2011-03-06T00:00:00-08:00</updated>
    <id>http://financeCoding.github.com/blog/2011/03/06/beagletouch-on-ti_android_froyo_devkit-v2-2</id>
    <content type="html"><![CDATA[<p>Liquidware's <a href="http://www.liquidware.com/shop/show/BB-BT/BeagleTouch">BeagleTouch</a> provides a nice display device for <a href="http://beagleboard.org/">BeagleBoard</a> developer. They provide non android <a href="https://github.com/liquidware/liquidware_beagleboard_linux/tree/liquidware">linux</a> kernel source code to jump in right away to use it. <a href="http://antipastohw.pbworks.com/w/page/27129517/BeagleTouch">BeagleTouch blog</a> post by will on <a href="http://antipastohw.pbworks.com/w/page/26554120/FrontPage">antipastohw</a>. Here is some crude patches to get started with it on <a href="http://code.google.com/p/rowboat/">rowboat</a> / <a href="http://processors.wiki.ti.com/index.php/TI-Android-FroYo-DevKit-V2.2_UserGuide">TI DevKit</a>. I have my patches located on google docs:</p>

<p><a href="https://docs.google.com/leaf?id=0B29MR2FlgtejMjFjOWVhOGYtOThiNC00NGJkLTk5NTktMDE3ZTBiZjhhYTY0&amp;hl=en"><span style="font-family:Arial;font-size:10pt;">BeagleTouch.TI_Android_Froyo_DevKit-V2.2.config</span></a><span style="color:black;font-family:Arial;font-size:10pt;">
</span></p>

<p><a href="https://docs.google.com/leaf?id=0B29MR2FlgtejODdjZDBhNzQtZmYyNC00MWVmLWI4YzYtN2Y2ODNhZjlhZmRk&amp;hl=en"><span style="font-family:Arial;font-size:10pt;">BeagleTouch.TI_Android_Froyo_DevKit-V2.2.patch</span></a><span style="color:black;font-family:Arial;font-size:10pt;">
</span></p>

<p>Apply the patch accordingly and copy over the config into the kernel source tree.</p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/030611_2121_beagletouch12.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>One issue that was noticeable from a direct patch of code was the y-axis being inverted. I corrected it with a hard coded reference value for now.</p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/030611_2121_beagletouch22.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p><img src="http://financecoding.files.wordpress.com/2011/03/030611_2121_beagletouch32.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></p>

<p>This patch doesn't help when offset loss happens in the touch screen. Looking info using <a href="https://github.com/kergoth/tslib">tslib</a> to capture better data settings and a linear formula for pointer <a href="http://wcyan.spaces.live.com/blog/cns!69F0ECE1192E739!381.entry">calculations</a>.  Some good instructions for compiling tslib on android can be found on <a href="http://www.eefocus.com/wenes1/blog/10-05/190293_09ed8.html">wenes1's blog</a>. A different direction to fix this issue would be to use <a href="http://androidzaurus.seesaa.net/article/90045743.html">Y_AXIS_MAX constant</a>.</p>

<p>[youtube=http://www.youtube.com/watch?v=8594I2NDPsM]</p>

<p>It was hard for me to find any direct documentation on how touch screen drivers should be designed and configured in Android. If you know of any please ping <a href="mailto:financecoding@gmail.com">me</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Flash New Boot Loader and Firmware netduino mini]]></title>
    <link href="http://financeCoding.github.com/blog/2010/12/24/how-to-flash-new-boot-loader-and-firmware-netduino-mini/"/>
    <updated>2010-12-24T00:00:00-08:00</updated>
    <id>http://financeCoding.github.com/blog/2010/12/24/how-to-flash-new-boot-loader-and-firmware-netduino-mini</id>
    <content type="html"><![CDATA[<h5>I got my netduino in the mail and whatever was flashed on it was toast, so after a few posts on the forum I got great advice on how to flash the Boot Loader (TinyBooter) and firmware (ER_CONFIG and ER_FLASH)</h5>


<h5><span style="color:#366092;font-size:13pt;"><strong>Erase Chip</strong>
</span></h5>


<h5>Erase the chip by applying +5v to the gold pad located by pin 12</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn1.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5><span style="color:#366092;font-size:13pt;"><strong>Download the TinyBooter</strong>
</span></h5>


<h5><a href="http://forums.netduino.com/index.php?/topic/621-netduino-mini-firmware-v410-update-5/">http://forums.netduino.com/index.php?/topic/621-netduino-mini-firmware-v410-update-5/</a></h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn2.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5><span style="color:#366092;font-size:13pt;"><strong>Run SAM-BA</strong>
</span></h5>


<h5>Run the SAM-BA application from ATMEL (Note if your on windows 7 Ultimate stick with an older version of SAM-BA, do not use 2.10.)</h5>


<h5>The current package I have installed is from: Install_AT91-ISP_v1.13.exe</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn3.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5><span style="color:#366092;font-size:13pt;"><strong>Power Up</strong>
</span></h5>


<h5>Power up the netdruino by connecting the power and serial TX/RX on pin 1 &amp; 2 (Note: make sure you have completely removed power after sending +5v to the gold pad)</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn4.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>Chose serial port and board</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn5.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>If the first time does not succeed power down and try again. And if it still does not succeed try hitting the gold pad for a second time.</h5>


<h5>If SAM-BA can communicate and get a valid id on the chip you should be presented with the following screen</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn6.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>Choose a file to send while in the "Flash" tab.</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn7.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>Click Send File. The SAM-BA application isn't that great and locks up while sending data over the serial port. If possible just wait. This part of the process will take a while, even if you don't see data being sent over the serial port stuff is going on.</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn8.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>SAM-BA will ask you if you want to "lock involved lock region(s) (0 to 2)", I choose "No" on this.</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn9.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>At this point you should have succeefully flashed the Boot Loader onto the netduino mini. Click on "Compare sent file with memory" to ensure the Boot Loader did not get corrupted in the process. If everything is fine you should be presented with something similar to  the following screen.</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn10.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>While still in the "Flash" tab execute the script "Boot from Flash (GPNVM2)" by clicking on the "Execute" button. The terminal on the bottom of the app should display "-I- GPNVM2 set"</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn11.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5><span style="color:#366092;font-size:13pt;"><strong>Download and extract the firmware</strong>
</span></h5>


<h5><a href="http://forums.netduino.com/index.php?/topic/621-netduino-mini-firmware-v410-update-5/">http://forums.netduino.com/index.php?/topic/621-netduino-mini-firmware-v410-update-5/</a></h5>


<h5><span style="color:#366092;font-size:13pt;"><strong>Run MFDeploy.exe</strong>
</span></h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn12.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>Remove power from the netduino before trying to pin the device.</h5>


<h5>If you open a putty terminal and repower the device you should see the following</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn13.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>This should help you determine if the Boot Loader that has been flash is working.</h5>


<h5>Choose the proper COM port the netduino is on.</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn14.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>Try and ping</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn15.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>Erase</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn16.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5><span style="color:#366092;font-size:13pt;"><strong>Deploy Firmware</strong>
</span></h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn17.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>A successful flash should look something like this</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn18.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5>Try sending some debug commands</h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn19.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>


<h5><img src="http://financecoding.files.wordpress.com/2010/12/122410_0519_howtoflashn20.png" alt="" /><span style="font-family:Times New Roman;font-size:12pt;">
</span></h5>

]]></content>
  </entry>
  
</feed>
